
@{
    ViewData["Title"] = "ReportAttendance";
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

@section Styles {

    <style>

        .btn i {
            font-size: 16px;
        }

        .btn {
            padding: 5px 8px;
        }

        .btn:hover {
            opacity: 0.8;
            transform: scale(1.1);
            transition: all 0.2s ease-in-out;
        }

        .modern-table {
            border-collapse: collapse;
            width: 100%;
            font-family: 'Poppins', sans-serif;
            margin: 20px 0;
            background-color: #ffffff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            overflow: hidden;
        }

        .modern-table thead {
            background: linear-gradient(90deg, #2196F3, #42A5F5);
            color: white;
            text-transform: uppercase;
            letter-spacing: 1px;
            font-weight: bold;
            font-size: 14px;
        }

        .modern-table tbody tr {
            transition: background 0.3s ease, transform 0.2s ease;
        }

        /* primer degradado */
        .modern-table tbody tr:nth-child(odd) {
            background-color: #FFFFFF;
        }

        /* segundo degradado */
        .modern-table tbody tr:nth-child(even) {
            background-color: #FFFFFF;
        }

        .modern-table tbody tr:hover {
            background-color: #90CAF9;
            transform: scale(1.01);
            cursor: pointer;
        }

        .modern-table td, .modern-table th {
            padding: 15px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        .modern-table .btn {
            border-radius: 4px;
            font-size: 12px;
            padding: 5px 10px;
            transition: all 0.3s ease;
        }

        .modern-table .btn-primary {
            background-color: #42A5F5;
            border-color: #42A5F5;
            color: white;
        }

        .modern-table .btn-danger {
            background-color: #E57373;
            border-color: #E57373;
            color: white;
        }

        .modern-table .btn-primary:hover {
            background-color: #1E88E5;
            border-color: #1E88E5;
        }

        .modern-table .btn-danger:hover {
            background-color: #D32F2F;
            border-color: #D32F2F;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            padding: 6px 12px;
            margin: 0 2px;
            border-radius: 4px;
            border: 1px solid transparent;
            background: #42A5F5;
            color: white;
        }

        .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
            background: #1E88E5;
            border-color: #1E88E5;
        }

        .dataTables_wrapper .dataTables_filter input {
            border-radius: 20px;
            border: 1px solid #ccc;
            padding: 5px 10px;
            margin-left: 5px;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }

        .dataTables_wrapper .dataTables_filter input:focus {
            border-color: #42A5F5;
            outline: none;
        }

        .dt-buttons .btn {
            margin-right: 10px;
            font-size: 14px;
            font-weight: bold;
        }

    </style>

    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.2/css/jquery.dataTables.min.css">
}

<div class="container">

    <br />

    <div class="row header" style="text-align:center;color:green">
        <h3>Reporte de asistencias</h3>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="row justify-content-center">
                <div class="col-md-4">
                    <label>Fecha de inicio:</label>
                    <input id="iptStartDate" type="date" class="form-control" required>
                </div>
                <div class="col-md-4">
                    <label>Fecha de fin:</label>
                    <input id="iptEndDate" type="date" class="form-control" required>
                </div>
            </div>

            <br />

            <div class="row justify-content-center">
                <button id="btnSearch" class="btn btn-primary">Buscar</button>
            </div>

            <br />

            <div class="row justify-content-center">
                <button id="btnGenerateExcel" class="btn btn-success">Generar Excel</button>
            </div>
        </div>
    </div>

    <hr />

    <table id="tblAttendances" class="table table-striped table-hover table-bordered modern-table"></table>
</div>

@section Scripts {

    <script type="text/javascript" src="https://cdn.datatables.net/1.10.2/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript">

        $(document).ready(function() {

            var attendances = [];

            $(window).on('load', async function () {

                try {

                    const today = new Date();
                    const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
                    const firstDayFormatted = firstDay.toISOString().split('T')[0];

                    const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);
                    const lastDayFormatted = lastDay.toISOString().split('T')[0];

                    $('#iptStartDate').val(firstDayFormatted);
                    $('#iptEndDate').val(lastDayFormatted);

                    await loadListAttendances();

                } catch (error) {

                    console.error('Error durante la carga de datos: ', error);
                }
            });

            $('#btnGenerateExcel').on('click', function () {

                var startDate = $('#iptStartDate').val();
                var endDate = $('#iptEndDate').val();
                var tableData = $('#tblAttendances').DataTable().rows().data().toArray();

                jQuery.ajax({
                    url: '@Url.Action("GenerateAttendancePDF", "Admins")',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ attendances: tableData, startDate: startDate, endDate: endDate }),
                    xhrFields: {
                        responseType: 'blob'
                    },
                    success: function (data) {

                        var blob = new Blob([data], { type: "application/vnd.ms-excel" });
                        var url = window.URL.createObjectURL(blob);
                        var a = document.createElement('a');

                        a.style.display = 'none';
                        a.href = url;
                        a.download = "AttendanceReport.xls";
                        document.body.appendChild(a);
                        a.click();
                        window.URL.revokeObjectURL(url);
                    },
                    error: function () {

                        window.open('@Url.Action("Error", "Home")', '_self');
                    }
                });
            });

            $('#btnSearch').on('click', function() {

                var startDate = $('#iptStartDate').val();
                var endDate = $('#iptEndDate').val();

                if (!startDate || !endDate) {

                    alert('Por favor ingresa ambas fechas (inicio y fin).');

                    return;
                }

                if (new Date(startDate) > new Date(endDate)) {

                    alert('La fecha de inicio no puede ser mayor que la fecha de fin.');

                    return;
                }

                var information = new FormData();

                information.append('CheckIn', startDate);
                information.append('CheckOut', endDate);

                jQuery.ajax({

                    url: '@Url.Action("SearchAttendanceByDateAndName", "Admins")',
                    method: 'POST',
                    data: information,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function(data) {

                        fillTableAttendances(data);
                    },
                    error: function () {

                        window.open('@Url.Action("Error", "Home")', '_self');
                    }
                });
            });

            async function loadListAttendances() {

                try {

                    var data = await jQuery.ajax({

                        url: '@Url.Action("LoadAllListAttendances", "Admins")',
                        method: 'GET',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8'
                    });

                    attendances = data;

                    fillTableAttendances(attendances);

                } catch (error) {

                    window.open('@Url.Action("Error", "Home")', '_self');
                }
            }

            function fillTableAttendances(listAttendances) {

                if (listAttendances.length === 0) {

                    Swal.fire({
                        icon: 'info',
                        title: 'No se encontraron resultados!',
                        text: 'No existen datos.'
                    });

                    return;
                }

                var columns = [];

                columns = [
                    { data: 'Date', title: 'Fecha' },
                    { data: 'Id', title: 'Id', visible: false },
                    { data: 'Firstname', title: 'Nombre' },
                    { data: 'Lastname', title: 'Apellido' },
                    { data: 'CheckIn', title: 'Ingreso' },
                    { data: 'CheckOut', title: 'Salida' },
                    { data: 'MinuteLate', title: 'Min tarde' },
                    { data: 'WorkedTime', title: 'Horas trabajadas' }
                ];

                if ($.fn.DataTable.isDataTable('#tblAttendances')) {

                    $('#tblAttendances').DataTable().clear().destroy();
                }

                for (var i = 0; i < listAttendances.length; ++i) {

                    var date = new Date(listAttendances[i].Date);

                    listAttendances[i].Date = getFormattedDate(date);

                    var checkInDate = new Date(listAttendances[i].CheckIn);

                    listAttendances[i].CheckIn = getFormattedTime(checkInDate);

                    if (listAttendances[i].CheckOut !== null) {

                        var checkOutDate = new Date(listAttendances[i].CheckOut);

                        listAttendances[i].CheckOut = getFormattedTime(checkOutDate);
                    }
                    else {

                        listAttendances[i].CheckOut = null;
                    }
                }

                $('#tblAttendances').DataTable({

                    data: listAttendances,
                    columns: columns,
                    searching: true,
                    paging: true,
                    ordering: true,
                    responsive: true
                });
            }

            function getDateTime() {

                const date = new Date();

                const day = date.getDate();
                const mounth = date.getMonth() + 1;
                const year = date.getFullYear();
                const hour = date.getHours();
                const minutes = date.getMinutes();

                return `${day}/${mounth}/${year} ${hour}:${minutes}`;
            }

            function getDate() {

                const date = new Date();

                const day = date.getDate();
                const mounth = date.getMonth() + 1;
                const year = date.getFullYear();

                return `${day}/${mounth}/${year}`;
            }

            function getTime() {

                const date = new Date();

                const hour = date.getHours();
                const minutes = date.getMinutes();

                return `${hour}:${minutes}`;
            }

            function getFormattedDateV2(date) {

                const day = date.getDate();
                const mounth = date.getMonth() + 1;
                const year = date.getFullYear();

                return `${day}/${mounth}/${year}`;
            }

            function getFormattedDate(date) {

                let day = String(date.getDate()).padStart(2, '0');
                let mounth = String(date.getMonth() + 1).padStart(2, '0');
                let year = date.getFullYear();
                let hour = String(date.getHours()).padStart(2, '0');
                let minutes = String(date.getMinutes()).padStart(2, '0');

                return `${day}/${mounth}/${year}`;
            }

            function getFormattedTime(date) {

                let day = String(date.getDate()).padStart(2, '0');
                let mounth = String(date.getMonth() + 1).padStart(2, '0');
                let year = date.getFullYear();
                let hour = String(date.getHours()).padStart(2, '0');
                let minutes = String(date.getMinutes()).padStart(2, '0');

                return `${hour}:${minutes}`;
            }
        });

    </script>
}